FORMAT: 1A

# Challenge API Documentation

Challenge Documentation Page

## Query parameters

All routes support query parameters to refine responses

- **[include](http://jsonapi.org/format/#fetching-relationships)**,
  e.g. `GET /session?include=people` to include properties of the
  relationship


# Households

## Household [/households/{id}]

### Get Single household [GET]

Retrieves a single vehicle

+ Parameters

    + id (required, integer, id) - the household id

+ Request 200 (application/json)
+ Response 200 (application/json)
    
    + body

            {
              "data": {
                "type": "households",
                  "id": "1",
                  "attributes": {
                    "address": "12 Valley Farms Street ",
                    "zip": "20735",
                    "city": "Clinton",
                    "state": "Maryland",
                    "number-of-bedrooms": 2,
                    "created-at": "2016-04-07T19:51:57.918Z",
                    "updated-at": "2016-04-07T19:51:57.918Z"
                  },
                  "relationships": {
                    "people": {
                      "data": [

                      ]
                    },
                    "vehicles": {
                      "data": [

                      ]
                    }
                  }
              }
            }

## Households [/households]

### Create household [POST]

+ Request 200 (application/json)

    + body

        {
          "household": {
            "address": "12 Valley Farms Street ",
            "zip": "20735",
            "city": "Clinton",
            "state": "Maryland",
            "number_of_bedrooms": 2
          }
        }


+ Response 201 (application/json)
    
    + body

            {
              "data": {
                "type": "households",
                  "id": "1",
                  "attributes": {
                    "address": "12 Valley Farms Street ",
                    "zip": "20735",
                    "city": "Clinton",
                    "state": "Maryland",
                    "number-of-bedrooms": 2,
                    "created-at": "2016-04-07T19:51:57.918Z",
                    "updated-at": "2016-04-07T19:51:57.918Z"
                  },
                  "relationships": {
                    "people": {
                      "data": [

                      ]
                    },
                    "vehicles": {
                      "data": [

                      ]
                    }
                  }
              }
            }

### Get household list [GET]

+ Request 200 (application/json)
+ Response 200 (application/json)
    
    + body

        {
          "data": [{
            "type": "households",
              "id": "1",
              "attributes": {
                "address": "12 Valley Farms Street ",
                "zip": "20735",
                "city": "Clinton",
                "state": "Maryland",
                "number-of-bedrooms": 2,
                "created-at": "2016-04-07T19:51:57.918Z",
                "updated-at": "2016-04-07T19:51:57.918Z"
              },
              "relationships": {
                "people": {
                  "data": [

                  ]
                },
                "vehicles": {
                  "data": [

                  ]
                }
              }
          }]
        }

# People

## People [/people/{id}]

### Get Single Person [GET]

Retrieves a single person

+ Parameters

    + id (required, integer, id) - the person id

+ Request 200 (application/json)
+ Response 200 (application/json)
    
    + body

        {
          "data": {
            "type": "people",
              "id": "1",
              "attributes": {
                "first-name": "Jhon",
                "last-name": "Doe",
                "email": "test@test.com",
                "age": 45,
                "gender": "F",
                "created-at": "2016-04-07T19:51:57.918Z",
                "updated-at": "2016-04-07T19:51:57.918Z"
              },
              "relationships": {
                "vehicles": { 
                  "data": [] 
                }
              }

          }
        }

## People [/people]

### Create People [POST]

+ Request 200 (application/json)

    + body

        {
          "person": {
            "first_name": "Jhon",
            "last_name": "Doe",
            "email": "test@test.com",
            "age": 45,
            "gender": "F",
            "household_id": 1
          }
        }


+ Response 201 (application/json)
    
    + body

        {
          "data": {
            "type": "people",
              "id": "1",
              "attributes": {
                "first-name": "Jhon",
                "last-name": "Doe",
                "email": "test@test.com",
                "age": 45,
                "gender": "F",
                "created-at": "2016-04-07T19:51:57.918Z",
                "updated-at": "2016-04-07T19:51:57.918Z"
              },
              "relationships": {
                "vehicles": { 
                  "data": [] 
                }
              }

          }
        }

### Get person list [GET]

+ Request 200 (application/json)
+ Response 200 (application/json)
    
    + body

        {
          "data": [{
            "type": "people",
              "id": "1",
              "attributes": {
                "first-name": "Jhon",
                "last-name": "Doe",
                "email": "test@test.com",
                "age": 45,
                "gender": "F",
                "created-at": "2016-04-07T19:51:57.918Z",
                "updated-at": "2016-04-07T19:51:57.918Z"
              },
              "relationships": {
                "vehicles": { 
                  "data": [] 
                }
              }

          }]
        }

# Vehicles

## Vehicle [/vehicles/{id}]

### Get Single Vehicle [GET]

Retrieves a single Vehicle 

+ Parameters

    + id (required, integer, id) - the vehicle id

+ Request 200 (application/json)
+ Response 200 (application/json)
    
    + body

        {
          "data": {
                "type": "vehicles",
                  "id": "1",
                  "attributes": {
                    "make": "Fiat",
                    "model": "Siena",
                    "year": "2005",
                    "license-plate": "KMU890",
                    "created-at": "2016-04-07T19:51:57.918Z",
                    "updated-at": "2016-04-07T19:51:57.918Z"
                  }
              }
        }

# Vehicles

## Vehicle [/vehicles/{id}]

### Get Single Vehicle [GET]

Retrieves a single Vehicle 

+ Parameters

    + id (required, integer, id) - the vehicle id

+ Request 200 (application/json)
+ Response 200 (application/json)
    
    + body

            {
              "data": {
                "type": "vehicles",
                  "id": "1",
                  "attributes": {
                    "make": "Fiat",
                    "model": "Siena",
                    "year": "2005",
                    "license-plate": "KMU890",
                    "created-at": "2016-04-07T19:51:57.918Z",
                    "updated-at": "2016-04-07T19:51:57.918Z"
                  }
              }
            }

## Vehicles [/vehicles]

### Create Vehicle [POST]

+ Request 200 (application/json)

    + body

        {
          "vehicle": {
            "make": "Fiat",
            "model": "Siena",
            "year": "2005",
            "license_plate": "KMU890",
            "person_id": 1
          }
        }


+ Response 201 (application/json)
    
    + body

            {
              "data": {
                "type": "vehicles",
                  "id": "1",
                  "attributes": {
                    "make": "Fiat",
                    "model": "Siena",
                    "year": "2005",
                    "license-plate": "KMU890",
                    "created-at": "2016-04-07T19:51:57.918Z",
                    "updated-at": "2016-04-07T19:51:57.918Z"
                  }
              }
            }

### Get vehicle list [GET]

+ Request 200 (application/json)
+ Response 200 (application/json)
    
    + body

        {
          "data": [{
                "type": "vehicles",
                  "id": "1",
                  "attributes": {
                    "make": "Fiat",
                    "model": "Siena",
                    "year": "2005",
                    "license-plate": "KMU890",
                    "created-at": "2016-04-07T19:51:57.918Z",
                    "updated-at": "2016-04-07T19:51:57.918Z"
                  }
              }]
        }
